const ecoleDirecteAPIBase = 'https://api.ecoledirecte.com/v3'

const ecoleDirecteAPIEndBase = '.awp?verbe=get&v=4.43.0'

const headers = {
  accept: "application/json, text/plain, */*",
  'accept-encoding':" gzip, deflate, br",
  'accept-language': "fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7",
  'content-type': "application/x-www-form-urlencoded",
  origin: "https://www.ecoledirecte.com",
  referer: "https://www.ecoledirecte.com/",
  'sec-fetch-dest': "empty",
  'sec-fetch-mode': "cors",
  'sec-fetch-site': "same-site",
  'user-agent': "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
  'X-Token': null
}

const caractersHTML = [
  { text: ' ', htmlOne: '&nbsp;', htmlTwo: '&#160;' },
  { text: '', htmlOne: '&shy;', htmlTwo: '&#173;' },
  { text: '‎', htmlOne: '&lrm;', htmlTwo: '&#8206;' },
  { text: '‏', htmlOne: '&rlm;', htmlTwo: '&#8207;' },
  { text: '"', htmlOne: '&quot;', htmlTwo: '&#34;' },
  { text: '«', htmlOne: '&laquo;', htmlTwo: '&#171;' },
  { text: '»', htmlOne: '&raquo;', htmlTwo: '&#187;' },
  { text: '<', htmlOne: '&lsaquo;', htmlTwo: '&#8249;' },
  { text: '>', htmlOne: '&rsaquo;', htmlTwo: '&#8250;' },
  { text: '“', htmlOne: '&ldquo;', htmlTwo: '&#8220;' },
  { text: '”', htmlOne: '&rdquo;', htmlTwo: '&#8221;' },
  { text: '„', htmlOne: '&bdquo;', htmlTwo: '&#8222;' },
  { text: "'", htmlOne: '&apos;', htmlTwo: '&#39;' },
  { text: "'", htmlOne: '&lsquo;', htmlTwo: '&#8216;' },
  { text: '’', htmlOne: '&rsquo;', htmlTwo: '&#8217;' },
  { text: ',', htmlOne: '&sbquo;', htmlTwo: '&#8218;' },
  { text: '…', htmlOne: '&hellip;', htmlTwo: '&#8230;' },
  { text: '!', htmlOne: '!', htmlTwo: '&#33;' },
  { text: '¡', htmlOne: '&iexcl;', htmlTwo: '&#161;' },
  { text: '?', htmlOne: '?', htmlTwo: '&#63;' },
  { text: '¿', htmlOne: '&iquest;', htmlTwo: '&#191;' },
  { text: '(', htmlOne: '(', htmlTwo: '&#40;' },
  { text: ')', htmlOne: ')', htmlTwo: '&#41;' },
  { text: '[', htmlOne: '[', htmlTwo: '&#91;' },
  { text: ']', htmlOne: ']', htmlTwo: '&#93;' },
  { text: '{', htmlOne: '{', htmlTwo: '&#123;' },
  { text: '}', htmlOne: '}', htmlTwo: '&#125;' },
  { text: '¨', htmlOne: '&uml;', htmlTwo: '&#168;' },
  { text: '´', htmlOne: '&acute;', htmlTwo: '&#180;' },
  { text: '`', htmlOne: '`', htmlTwo: '&#96;' },
  { text: '^', htmlOne: '^', htmlTwo: '&#94;' },
  { text: '^', htmlOne: '&circ;', htmlTwo: '&#710;' },
  { text: '~', htmlOne: '~', htmlTwo: '&#126;' },
  { text: '', htmlOne: '&tilde;', htmlTwo: '&#732;' },
  { text: ',', htmlOne: '&cedil;', htmlTwo: '&#184;' },
  { text: '#', htmlOne: '#', htmlTwo: '&#35;' },
  { text: '*', htmlOne: '*', htmlTwo: '&#42;' },
  { text: ',', htmlOne: ',', htmlTwo: '&#44;' },
  { text: '.', htmlOne: '.', htmlTwo: '&#46;' },
  { text: ':', htmlOne: ':', htmlTwo: '&#58;' },
  { text: ';', htmlOne: ';', htmlTwo: '&#59;' },
  { text: '·', htmlOne: '&middot;', htmlTwo: '&#183;' },
  { text: '•', htmlOne: '&bull;', htmlTwo: '&#8226;' },
  { text: '¯', htmlOne: '&macr;', htmlTwo: '&#175;' },
  { text: '‾', htmlOne: '&oline;', htmlTwo: '&#8254;' },
  { text: '-', htmlOne: '-', htmlTwo: '&#45;' },
  { text: '–', htmlOne: '&ndash;', htmlTwo: '&#8211;' },
  { text: '—', htmlOne: '&mdash;', htmlTwo: '&#8212;' },
  { text: '_', htmlOne: '_', htmlTwo: '&#95;' },
  { text: '|', htmlOne: '|', htmlTwo: '&#124;' },
  { text: '¦', htmlOne: '&brvbar;', htmlTwo: '&#166;' },
  {
    text: '    &zwnj;',
    htmlOne: '&#8204;',
    htmlTwo: 'antiliant sans chasse'
  },
  {
    text: '    &zwj;',
    htmlOne: '&#8205;',
    htmlTwo: 'liant sans chasse'
  },
  { text: '†', htmlOne: '&dagger;', htmlTwo: '&#8224;' },
  { text: '‡', htmlOne: '&Dagger;', htmlTwo: '&#8225;' },
  { text: '§', htmlOne: '&sect;', htmlTwo: '&#167;' },
  { text: '¶', htmlOne: '&para;', htmlTwo: '&#182;' },
  { text: '©', htmlOne: '&copy;', htmlTwo: '&#169;' },
  { text: '®', htmlOne: '&reg;', htmlTwo: '&#174;' },
  { text: '™', htmlOne: '&trade;', htmlTwo: '&#8482;' },
  { text: '&', htmlOne: '&amp;', htmlTwo: '&#38;' },
  { text: '@', htmlOne: '@', htmlTwo: '&#64;' },
  { text: '/', htmlOne: '/', htmlTwo: '&#47;' },
  { text: '', htmlOne: '', htmlTwo: '&#92;' },
  { text: '◊', htmlOne: '&loz;', htmlTwo: '&#9674;' },
  { text: '♠', htmlOne: '&spades;', htmlTwo: '&#9824;' },
  { text: '♣', htmlOne: '&clubs;', htmlTwo: '&#9827;' },
  { text: '♥', htmlOne: '&hearts;', htmlTwo: '&#9829;' },
  { text: '♦', htmlOne: '&diams;', htmlTwo: '&#9830;' },
  { text: '←', htmlOne: '&larr;', htmlTwo: '&#8592;' },
  { text: '↑', htmlOne: '&uarr;', htmlTwo: '&#8593;' },
  { text: '→', htmlOne: '&rarr;', htmlTwo: '&#8594;' },
  { text: '↓', htmlOne: '&darr;', htmlTwo: '&#8595;' },
  { text: '↔', htmlOne: '&harr;', htmlTwo: '&#8596;' },
  { text: '¤', htmlOne: '&curren;', htmlTwo: '&#164;' },
  { text: '€', htmlOne: '&euro;', htmlTwo: '&#128;' },
  { text: '$', htmlOne: '$', htmlTwo: '&#36;' },
  { text: '¢', htmlOne: '&cent;', htmlTwo: '&#162;' },
  { text: '£', htmlOne: '&pound;', htmlTwo: '&#163;' },
  { text: '¥', htmlOne: '&yen;', htmlTwo: '&#165;' },
  { text: 'ƒ', htmlOne: '&fnof;', htmlTwo: '&#402;' },
  { text: 'á', htmlOne: '&aacute;', htmlTwo: '&#225;' },
  { text: 'Á', htmlOne: '&Aacute;', htmlTwo: '&#193;' },
  { text: 'â', htmlOne: '&acirc;', htmlTwo: '&#226;' },
  { text: 'Â', htmlOne: '&Acirc;', htmlTwo: '&#194;' },
  { text: 'à', htmlOne: '&agrave;', htmlTwo: '&#224;' },
  { text: 'À', htmlOne: '&Agrave;', htmlTwo: '&#192;' },
  { text: 'å', htmlOne: '&aring;', htmlTwo: '&#229;' },
  { text: 'Å', htmlOne: '&Aring;', htmlTwo: '&#197;' },
  { text: 'ã', htmlOne: '&atilde;', htmlTwo: '&#227;' },
  { text: 'Ã', htmlOne: '&Atilde;', htmlTwo: '&#195;' },
  { text: 'ä', htmlOne: '&auml;', htmlTwo: '&#228;' },
  { text: 'Ä', htmlOne: '&Auml;', htmlTwo: '&#196;' },
  { text: 'æ', htmlOne: '&aelig;', htmlTwo: '&#230;' },
  { text: 'Æ', htmlOne: '&AElig;', htmlTwo: '&#198;' },
  { text: 'ç', htmlOne: '&ccedil;', htmlTwo: '&#231;' },
  { text: 'Ç', htmlOne: '&Ccedil;', htmlTwo: '&#199;' },
  { text: 'é', htmlOne: '&eacute;', htmlTwo: '&#233;' },
  { text: 'É', htmlOne: '&Eacute;', htmlTwo: '&#201;' },
  { text: 'ê', htmlOne: '&ecirc;', htmlTwo: '&#234;' },
  { text: 'Ê', htmlOne: '&Ecirc;', htmlTwo: '&#202;' },
  { text: 'è', htmlOne: '&egrave;', htmlTwo: '&#232;' },
  { text: 'È', htmlOne: '&Egrave;', htmlTwo: '&#200;' },
  { text: 'ë', htmlOne: '&euml;', htmlTwo: '&#235;' },
  { text: 'Ë', htmlOne: '&Euml;', htmlTwo: '&#203;' },
  { text: 'í', htmlOne: '&iacute;', htmlTwo: '&#237;' },
  { text: 'Í', htmlOne: '&Iacute;', htmlTwo: '&#205;' },
  { text: 'î', htmlOne: '&icirc;', htmlTwo: '&#238;' },
  { text: 'Î', htmlOne: '&Icirc;', htmlTwo: '&#206;' },
  { text: 'ì', htmlOne: '&igrave;', htmlTwo: '&#236;' },
  { text: 'Ì', htmlOne: '&Igrave;', htmlTwo: '&#204;' },
  { text: 'ï', htmlOne: '&iuml;', htmlTwo: '&#239;' },
  { text: 'Ï', htmlOne: '&Iuml;', htmlTwo: '&#207;' },
  { text: 'ñ', htmlOne: '&ntilde;', htmlTwo: '&#241;' },
  { text: 'Ñ', htmlOne: '&Ntilde;', htmlTwo: '&#209;' },
  { text: 'ó', htmlOne: '&oacute;', htmlTwo: '&#243;' },
  { text: 'Ó', htmlOne: '&Oacute;', htmlTwo: '&#211;' },
  { text: 'ô', htmlOne: '&ocirc;', htmlTwo: '&#244;' },
  { text: 'Ô', htmlOne: '&Ocirc;', htmlTwo: '&#212;' },
  { text: 'ò', htmlOne: '&ograve;', htmlTwo: '&#242;' },
  { text: 'Ò', htmlOne: '&Ograve;', htmlTwo: '&#210;' },
  { text: 'ø', htmlOne: '&oslash;', htmlTwo: '&#248;' },
  { text: 'Ø', htmlOne: '&Oslash;', htmlTwo: '&#216;' },
  { text: 'õ', htmlOne: '&otilde;', htmlTwo: '&#245;' },
  { text: 'Õ', htmlOne: '&Otilde;', htmlTwo: '&#213;' },
  { text: 'ö', htmlOne: '&ouml;', htmlTwo: '&#246;' },
  { text: 'Ö', htmlOne: '&Ouml;', htmlTwo: '&#214;' },
  { text: 'œ', htmlOne: '&oelig;', htmlTwo: '&#339;' },
  { text: 'Œ', htmlOne: '&OElig;', htmlTwo: '&#338;' },
  { text: 'š', htmlOne: '&scaron;', htmlTwo: '&#353;' },
  { text: 'Š', htmlOne: '&Scaron;', htmlTwo: '&#352;' },
  { text: 'ß', htmlOne: '&szlig;', htmlTwo: '&#223;' },
  { text: 'ð', htmlOne: '&eth;', htmlTwo: '&#240;' },
  { text: 'Ð', htmlOne: '&ETH;', htmlTwo: '&#208;' },
  { text: 'þ', htmlOne: '&thorn;', htmlTwo: '&#254;' },
  { text: 'Þ', htmlOne: '&THORN;', htmlTwo: '&#222;' },
  { text: 'ú', htmlOne: '&uacute;', htmlTwo: '&#250;' },
  { text: 'Ú', htmlOne: '&Uacute;', htmlTwo: '&#218;' },
  { text: 'û', htmlOne: '&ucirc;', htmlTwo: '&#251;' },
  { text: 'Û', htmlOne: '&Ucirc;', htmlTwo: '&#219;' },
  { text: 'ù', htmlOne: '&ugrave;', htmlTwo: '&#249;' },
  { text: 'Ù', htmlOne: '&Ugrave;', htmlTwo: '&#217;' },
  { text: 'ü', htmlOne: '&uuml;', htmlTwo: '&#252;' },
  { text: 'Ü', htmlOne: '&Uuml;', htmlTwo: '&#220;' },
  { text: 'ý', htmlOne: '&yacute;', htmlTwo: '&#253;' },
  { text: 'Ý', htmlOne: '&Yacute;', htmlTwo: '&#221;' },
  { text: 'ÿ', htmlOne: '&yuml;', htmlTwo: '&#255;' },
  { text: 'Ÿ', htmlOne: '&Yuml;', htmlTwo: '&#376;' },
  { text: 'α', htmlOne: '&alpha;', htmlTwo: '&#945;' },
  { text: 'Α', htmlOne: '&Alpha;', htmlTwo: '&#913;' },
  { text: 'β', htmlOne: '&beta;', htmlTwo: '&#946;' },
  { text: 'Β', htmlOne: '&Beta;', htmlTwo: '&#914;' },
  { text: 'γ', htmlOne: '&gamma;', htmlTwo: '&#947;' },
  { text: 'Γ', htmlOne: '&Gamma;', htmlTwo: '&#915;' },
  { text: 'δ', htmlOne: '&delta;', htmlTwo: '&#948;' },
  { text: 'Δ', htmlOne: '&Delta;', htmlTwo: '&#916;' },
  { text: 'ε', htmlOne: '&epsilon;', htmlTwo: '&#949;' },
  { text: 'Ε', htmlOne: '&Epsilon;', htmlTwo: '&#917;' },
  { text: 'ζ', htmlOne: '&zeta;', htmlTwo: '&#950;' },
  { text: 'Ζ', htmlOne: '&Zeta;', htmlTwo: '&#918;' },
  { text: 'η', htmlOne: '&eta;', htmlTwo: '&#951;' },
  { text: 'Η', htmlOne: '&Eta;', htmlTwo: '&#919;' },
  { text: 'θ', htmlOne: '&theta;', htmlTwo: '&#952;' },
  { text: 'Θ', htmlOne: '&Theta;', htmlTwo: '&#920;' },
  { text: 'ι', htmlOne: '&iota;', htmlTwo: '&#953;' },
  { text: 'Ι', htmlOne: '&Iota;', htmlTwo: '&#921;' },
  { text: 'κ', htmlOne: '&kappa;', htmlTwo: '&#954;' },
  { text: 'Κ', htmlOne: '&Kappa;', htmlTwo: '&#922;' },
  { text: 'λ', htmlOne: '&lambda;', htmlTwo: '&#955;' },
  { text: 'Λ', htmlOne: '&Lambda;', htmlTwo: '&#923;' },
  { text: 'μ', htmlOne: '&mu;', htmlTwo: '&#956;' },
  { text: 'Μ', htmlOne: '&Mu;', htmlTwo: '&#924;' },
  { text: 'ν', htmlOne: '&nu;', htmlTwo: '&#957;' },
  { text: 'Ν', htmlOne: '&Nu;', htmlTwo: '&#925;' },
  { text: 'ξ', htmlOne: '&xi;', htmlTwo: '&#958;' },
  { text: 'Ξ', htmlOne: '&Xi;', htmlTwo: '&#926;' },
  { text: 'ο', htmlOne: '&omicron;', htmlTwo: '&#959;' },
  { text: 'Ο', htmlOne: '&Omicron;', htmlTwo: '&#927;' },
  { text: 'π', htmlOne: '&pi;', htmlTwo: '&#960;' },
  { text: 'Π', htmlOne: '&Pi;', htmlTwo: '&#928;' },
  { text: 'ρ', htmlOne: '&rho;', htmlTwo: '&#961;' },
  { text: 'Ρ', htmlOne: '&Rho;', htmlTwo: '&#929;' },
  { text: 'σ', htmlOne: '&sigma;', htmlTwo: '&#963;' },
  { text: 'ς', htmlOne: '&sigmaf;', htmlTwo: '&#962;' },
  { text: 'Σ', htmlOne: '&Sigma;', htmlTwo: '&#931;' },
  { text: 'τ', htmlOne: '&tau;', htmlTwo: '&#964;' },
  { text: 'Τ', htmlOne: '&Tau;', htmlTwo: '&#932;' },
  { text: 'υ', htmlOne: '&upsilon;', htmlTwo: '&#965;' },
  { text: 'Υ', htmlOne: '&Upsilon;', htmlTwo: '&#933;' },
  { text: 'φ', htmlOne: '&phi;', htmlTwo: '&#966;' },
  { text: 'Φ', htmlOne: '&Phi;', htmlTwo: '&#934;' },
  { text: 'χ', htmlOne: '&chi;', htmlTwo: '&#967;' },
  { text: 'Χ', htmlOne: '&Chi;', htmlTwo: '&#935;' },
  { text: 'ψ', htmlOne: '&psi;', htmlTwo: '&#968;' },
  { text: 'Ψ', htmlOne: '&Psi;', htmlTwo: '&#936;' },
  { text: 'ω', htmlOne: '&omega;', htmlTwo: '&#969;' },
  { text: 'Ω', htmlOne: '&Omega;', htmlTwo: '&#937;' },
  { text: '°', htmlOne: '&deg;', htmlTwo: '&#176;' },
  { text: 'µ', htmlOne: '&micro;', htmlTwo: '&#181;' },
  { text: '<', htmlOne: '&lt;', htmlTwo: '&#60;' },
  { text: '>', htmlOne: '&gt;', htmlTwo: '&#62;' },
  { text: '≤', htmlOne: '&le;', htmlTwo: '&#8804;' },
  { text: '≥', htmlOne: '&ge;', htmlTwo: '&#8805;' },
  { text: '=', htmlOne: '=', htmlTwo: '&#61;' },
  { text: '≈', htmlOne: '&asymp;', htmlTwo: '&#8776;' },
  { text: '≠', htmlOne: '&ne;', htmlTwo: '&#8800;' },
  { text: '≡', htmlOne: '&equiv;', htmlTwo: '&#8801;' },
  { text: '±', htmlOne: '&plusmn;', htmlTwo: '&#177;' },
  { text: '−', htmlOne: '&minus;', htmlTwo: '&#8722;' },
  { text: '+', htmlOne: '+', htmlTwo: '&#43;' },
  { text: '×', htmlOne: '&times;', htmlTwo: '&#215;' },
  { text: '÷', htmlOne: '&divide;', htmlTwo: '&#247;' },
  { text: '⁄', htmlOne: '&frasl;', htmlTwo: '&#8260;' },
  { text: '%', htmlOne: '%', htmlTwo: '&#37;' },
  { text: '‰', htmlOne: '&permil;', htmlTwo: '&#8240;' },
  { text: '¼', htmlOne: '&frac14;', htmlTwo: '&#188;' },
  { text: '½', htmlOne: '&frac12;', htmlTwo: '&#189;' },
  { text: '¾', htmlOne: '&frac34;', htmlTwo: '&#190;' },
  { text: '¹', htmlOne: '&sup1;', htmlTwo: '&#185;' },
  { text: '²', htmlOne: '&sup2;', htmlTwo: '&#178;' },
  { text: '³', htmlOne: '&sup3;', htmlTwo: '&#179;' },
  { text: 'º', htmlOne: '&ordm;', htmlTwo: '&#186;' },
  { text: 'ª', htmlOne: '&ordf;', htmlTwo: '&#170;' },
  { text: 'ƒ', htmlOne: '&fnof;', htmlTwo: '&#402;' },
  { text: '′', htmlOne: '&prime;', htmlTwo: '&#8242;' },
  { text: '″', htmlOne: '&Prime;', htmlTwo: '&#8243;' },
  { text: '∂', htmlOne: '&part;', htmlTwo: '&#8706;' },
  { text: '∏', htmlOne: '&prod;', htmlTwo: '&#8719;' },
  { text: '∑', htmlOne: '&sum;', htmlTwo: '&#8721;' },
  { text: '√', htmlOne: '&radic;', htmlTwo: '&#8730;' },
  { text: '∞', htmlOne: '&infin;', htmlTwo: '&#8734;' },
  { text: '¬', htmlOne: '&not;', htmlTwo: '&#172;' },
  { text: '∩', htmlOne: '&cap;', htmlTwo: '&#8745;' },
  { text: '∫', htmlOne: '&int;', htmlTwo: '&#8747;' },
  { text: '⇒', htmlOne: '&rArr;', htmlTwo: '&#8658;' },
  { text: '⇔', htmlOne: '&hArr;', htmlTwo: '&#8660;' },
  { text: '∀', htmlOne: '&forall;', htmlTwo: '&#8704;' },
  { text: '∃', htmlOne: '&exist;', htmlTwo: '&#8707;' },
  { text: '∇', htmlOne: '&nabla;', htmlTwo: '&#8711;' },
  { text: '∈', htmlOne: '&isin;', htmlTwo: '&#8712;' },
  { text: '∋', htmlOne: '&ni;', htmlTwo: '&#8715;' },
  { text: '∝', htmlOne: '&prop;', htmlTwo: '&#8733;' },
  { text: '∠', htmlOne: '&ang;', htmlTwo: '&#8736;' },
  { text: '∧', htmlOne: '&and;', htmlTwo: '&#8743;' },
  { text: '∨', htmlOne: '&or;', htmlTwo: '&#8744;' },
  { text: '∪', htmlOne: '&cup;', htmlTwo: '&#8746;' },
  { text: '∴', htmlOne: '&there4;', htmlTwo: '&#8756;' },
  { text: '∼', htmlOne: '&sim;', htmlTwo: '&#8764;' },
  { text: '⊂', htmlOne: '&sub;', htmlTwo: '&#8834;' },
  { text: '⊃', htmlOne: '&sup;', htmlTwo: '&#8835;' },
  { text: '⊆', htmlOne: '&sube;', htmlTwo: '&#8838;' },
  { text: '⊇', htmlOne: '&supe;', htmlTwo: '&#8839;' },
  { text: '⊥', htmlOne: '&perp;', htmlTwo: '&#8869;' },
  { text: '⊕', htmlOne: '&oplus;', htmlTwo: '&#8853;' },
  { text: ' ', htmlOne: '&thinsp;', htmlTwo: '&#8201;' },
  { text: ' ', htmlOne: '&ensp;', htmlTwo: '&#8194;' },
  { text: ' ', htmlOne: '&emsp;', htmlTwo: '&#8195;' },
  { text: '℘', htmlOne: '&weierp;', htmlTwo: '&#8472;' },
  { text: 'ℑ', htmlOne: '&image;', htmlTwo: '&#8465;' },
  { text: 'ℜ', htmlOne: '&real;', htmlTwo: '&#8476;' },
  { text: '↵', htmlOne: '&crarr;', htmlTwo: '&#8629;' },
  { text: '⇐', htmlOne: '&lArr;', htmlTwo: '&#8656;' },
  { text: '⇑', htmlOne: '&uArr;', htmlTwo: '&#8657;' },
  { text: '⇓', htmlOne: '&dArr;', htmlTwo: '&#8659;' },
  { text: '∅', htmlOne: '&empty;', htmlTwo: '&#8709;' },
  { text: '∉', htmlOne: '&notin;', htmlTwo: '&#8713;' },
  { text: '∗', htmlOne: '&lowast;', htmlTwo: '&#8727;' },
  { text: '≅', htmlOne: '&cong;', htmlTwo: '&#8773;' },
  { text: '⊄', htmlOne: '&nsub;', htmlTwo: '&#8836;' },
  { text: '⊗', htmlOne: '&otimes;', htmlTwo: '&#8855;' },
  { text: '⋅', htmlOne: '&sdot;', htmlTwo: '&#8901;' },
  { text: '⌈', htmlOne: '&lceil;', htmlTwo: '&#8968;' },
  { text: '⌉', htmlOne: '&rceil;', htmlTwo: '&#8969;' },
  { text: '⌊', htmlOne: '&lfloor;', htmlTwo: '&#8970;' },
  { text: '⌋', htmlOne: '&rfloor;', htmlTwo: '&#8971;' },
  { text: '⟨', htmlOne: '&lang;', htmlTwo: '&#9001;' },
  { text: '⟩', htmlOne: '&rang;', htmlTwo: '&#9002;' },
  { text: 'ℵ', htmlOne: '&alefsym;', htmlTwo: '&#8501;' },
  { text: 'ϑ', htmlOne: '&thetasym;', htmlTwo: '&#977;' },
  { text: 'ϖ', htmlOne: '&piv;', htmlTwo: '&#982;' },
  { text: 'ϒ', htmlOne: '&upsih;', htmlTwo: '&#978;' }
]

const fileConverter = {
  "D": "FICHIER_CDT",
  "M": "PIECE_JOINTE",
  "C": "CLOUD",
  "doc": "Doc"
}

module.exports = {
  headers, 
  caractersHTML,
  fileConverter,
  ecoleDirecteAPIBase,
  ecoleDirecteAPIEndBase
}